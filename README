
****************
* dll
* CS 221 W/ Mason Vail
* 04/05/24
* Drew Hamre
**************** 

OVERVIEW:

ListTester.java runs tests to test functionality of IUDoubleLinkedList.java,
and optionally all the previously created list types throughout the 
semester (ArrayList & SingleLinkedList).


INCLUDED FILES:

* IndexedUnsortedList.java - source file
* IUDoubleLinkedList.java - source file
* ListTester.java - source file
* README - this file


COMPILING AND RUNNING:

From the directory containing all source files, compile the
driver class (and all dependencies) with the command:
$ javac ListTester.java

Run the compiled class file with the command:
$ java ListTester

Console output will give the results after the program finishes.


PROGRAM DESIGN AND IMPORTANT CONCEPTS:

IUDoubleLinkedList implements the IndexedUnsortedList interface and 
contains methods for a working double linked list. Unlike a single linked 
list, the double linked list has nodes that are able to reference the previous
node. 

ListTester is the where you run the program. This ultimately tests the functionality
of the double linked list methods I have implemented. It has several different scenarios
within it to account for many different types of lists.


TESTING:

First of all, I tried to write the best ListTester possible so I could trust 
the results of my IUDoubleLinkedList methods. Although I knew it likely wouldn't 
be 100% reliable, it gave me enough confidence to know whether or not I was
making progress or not. I also drew out the steps of the methods that were
most complicated.


DISCUSSION:
 
My biggest problem was simply writing all the methods for IUDoubleLinkedList
and making sure I accounted for all potential special cases. I also struggled
a bit with differentiating those methods from the IUSingleLinkedList methods.
Because it seemed like there were so many ways in which I could end up confused,
I was forced me to actually draw the steps out on a tablet, similar to like we
did in class, and go step by step, making sure everything was dealt within
any particular method.

